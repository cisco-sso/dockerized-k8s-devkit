#!/usr/bin/env bash
set -euo pipefail

version=$(curl -sSL "https://api.github.com/repos/cisco-sso/kdk/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

archtype=$(uname -m)
if [[ ${archtype} == 'x86_64' ]]; then
  arch="amd64"
elif [[ ${archtype}  == 'x86_32' ]]; then
  arch="386"
else
  echo "Unsupported architecture"
  exit 1
fi

if [[ "$OSTYPE" == "linux-gnu" ]]; then
  os="linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  os="darwin"
elif [[ "$OSTYPE" =~ ^(cygwin|msys)$ ]]; then
  os="windows"
else
  echo "Unsupported OS"
  exit 1
fi

tmpdir=/tmp/kdk-${os}-${arch}
if [[ ${os} =~ ^(linux|darwin)$ ]]; then
  kdk_bin=${tmpdir}/kdk
  kdk_destination=/usr/local/bin/kdk
elif [[ $os == "windows" ]]; then
  kdk_bin=${tmpdir}/kdk.exe
  kdk_destination=/usr/local/bin/kdk.exe
fi

dist_tgz=kdk-${version}-${os}-${arch}.tar.gz
download_uri=https://github.com/cisco-sso/kdk/releases/download/${version}/${dist_tgz}

mkdir -p ${tmpdir}
curl -sSL ${download_uri} | tar -xz -C ${tmpdir}

if [[ ! -d /usr/local/bin ]]; then
    # Echo the command so the user may view what was executed
    (set -x; sudo install -m 0755 -d $(dirname ${kdk_destination}))

    # Handle a windows-ism where the above may not take effect until
    #   later despite the subshell.
    while [[ ! -d /usr/local/bin ]]; do
	sleep 1
    done
fi

# Echo the command so the user may view what was executed
(set -x; sudo install -m 0755 ${kdk_bin} ${kdk_destination})
# Handle a windows-ism where the above may not take effect until
#   later despite the subshell.
while [[ ! -f ${kdk_destination} ]]; do
  sleep 1
done

rm -fr ${tmpdir}
